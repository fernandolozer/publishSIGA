@model SIGA.Entities.Models.ClienteTipoDocumento

@{
    ViewBag.Title = "Temporalidade";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var url = Url.Content("~/SIGA/ClientesTiposDocumentos/CarregaListaDeSetoresDoCliente");
    var urlMantenedora = Url.Content("~/SIGA/Clientes/CarregaListaDeCliente");
}
}

<script type="text/javascript">
    $(function () {
        $("#@Html.IdFor(model => model.PrazoCorrente)").ForceNumericOnly();
        $("#@Html.IdFor(model => model.PrazoIntermediario)").ForceNumericOnly();

        $('#PrazoCorrente').change(function () {
            updateTotal();
        });

        $('#PrazoIntermediario').change(function () {
            updateTotal();
        });

        var input1 = 0;
        var input2 = 0;

        var updateTotal = function () {
            input1 = parseInt($('#PrazoCorrente').val());
            input2 = parseInt($('#PrazoIntermediario').val());
            if (isNaN(input1) || isNaN(input2)) {
                if (!input2) {
                    $('#txtTotal').val($('#PrazoCorrente').val());
                }

                if (!input1) {
                    $('#txtTotal').val($('#PrazoIntermediario').val());
                }

            } else {
                $('#txtTotal').val(input1 + input2);
            }
        };

        var output_total = $('#txtTotal');

        var total = input1 + input2;

        if (total != 0) {
            output_total.val(total);
        }

    });
</script>

<script type="text/javascript">
    $(function () {
        $("#idClienteTipoDocumento").change(function () {
            var elements = "";
            if ($(this).val() == '') {
                elements = '<option value="">[ Selecione ]</option>';
                $('#idSetorTipoDocumento').empty().attr('readonly', true).append(elements);
                return;
            }
            $.ajax({
                url: '@url',
                type: 'POST',
                data: { idCliente: $(this).val() },
                datatype: 'json',
                success: function (data) {
                    elements = '<option value="">[ Selecione ]</option>';
                    $.each(data, function () {
                        elements = elements + '<option value="' + this.IdSetor + '">' + this.NomeSetor + '</option>';
                    });
                    $('#idSetorTipoDocumento').empty().attr('readonly', false).append(elements);
                }
            });
        });

        $("#idMantenedora").change(function () {
            var elements = "";
            if ($(this).val() == '') {
                elements = '<option value="">[ Selecione ]</option>';
                $('#idClienteTipoDocumento').empty().attr('readonly', true).append(elements);
                return;
            }
            $.ajax({
                url: '@urlMantenedora',
                type: 'POST',
                data: { idMantenedora: $(this).val() },
                datatype: 'json',
                success: function (data) {
                    elements = '<option value="">[ Selecione ]</option>';
                    $.each(data, function () {
                        elements = elements + '<option value="' + this.IdCliente + '">' + this.NomeCliente + '</option>';
                    });
                    $('#idClienteTipoDocumento').empty().attr('readonly', false).append(elements);
                }
            });
        });
    });

</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Temporalidade</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Setor.Cliente.IdMantenedora, "Mantenedora", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdMantenedora", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control", @id = "idMantenedora" })
                @Html.ValidationMessageFor(model => model.Setor.Cliente.IdMantenedora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Setor.Cliente.IdCliente, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCliente", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control", @id = "idClienteTipoDocumento", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Setor.Cliente.IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdSetor, "Setor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdSetor", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control", @id = "idSetorTipoDocumento", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.IdSetor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTipoDocumento, "Tipo do Documento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdTipoDocumento", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTipoDocumento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrazoCorrente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrazoCorrente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrazoCorrente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrazoIntermediario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrazoIntermediario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrazoIntermediario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Prazo Total", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalPrazo, new { htmlAttributes = new { @class = "form-control", @id = "txtTotal", @readonly = "readonly" } })
                @*<input type="text" id="txtTotal" readonly>*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoDeClassificacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodigoDeClassificacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodigoDeClassificacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DestinacaoFinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.DestinacaoFinal, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DestinacaoFinal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


<div>
    <a class="btn btn-xs" href="@Url.Action("Index")"> Voltar</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
