@model SIGA.Entities.Models.OrdemServico

@{
    ViewBag.Title = "Ordem de Serviço";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ordem de Serviço</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdOrdemServico)
        @Html.HiddenFor(model => model.AtendenteUserId)
        @Html.HiddenFor(model => model.DataPedidoOrdemServico)
        @Html.HiddenFor(model => model.SolicitanteUserId)

        @*<div class="form-group">
                @Html.LabelFor(model => model.AtendenteUserId, "Usuário Atendente", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AtendenteUserId", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AtendenteUserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SolicitanteUserId, "Usuário Solicitante", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SolicitanteUserId", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SolicitanteUserId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.NomeOrdemServico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeOrdemServico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeOrdemServico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCliente, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCliente", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdSetor, "Setor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdSetor", null, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdSetor, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.IdOrdemServicoPai, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdOrdemServicoPai, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdOrdemServicoPai, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StatusOrdemServico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.StatusOrdemServico, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusOrdemServico, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DataPedidoOrdemServico, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataPedidoOrdemServico, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataPedidoOrdemServico, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DataEntregaOrdemServico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataEntregaOrdemServico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataEntregaOrdemServico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoOrdemServico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TipoOrdemServico, "[ Selecione ]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoOrdemServico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-offset-2 col-md-10" id="replacetarget">
                @{ Html.RenderAction("Index", "ItemOrdemServicos", new { id = Model.IdOrdemServico }); }
            </div>
        </div>

        @if (!User.IsInRole("Cliente"))
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
}

<!-- modal placeholder-->
<div id="myModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<div>
    <a class="btn btn-xs" href="@Url.Action("Index", new { isGerenciarOS = false })"> Voltar</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
